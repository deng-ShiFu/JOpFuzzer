import Mutation.SeedPool;
import Mutation.MutationEntry;
import Preprocess.Config;
import Preprocess.Prepare;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.*;

import java.util.Collection;
import java.util.Iterator;

public class MainEntry {
    public static void main(String[] args) throws Exception {
        Options options = new Options();

        options.addOption("jdkPath", true, "the tested jdk path");
        options.addOption("regressionTestPath", true, "the regression test path");
        options.addOption("seedNumber", true, "the seed number generated by JavaFuzzer");
        options.addOption("mutationRound", true, "the mutation round");

        CommandLineParser parser = new DefaultParser();
        CommandLine cmd = parser.parse(options, args);

        String jdkPath = cmd.getOptionValue("jdkPath");
        String regressionTestPath = cmd.getOptionValue("regressionTestPath");
        String seedNumber = cmd.getOptionValue("seedNumber");
        String mutationRound = cmd.getOptionValue("mutationRound");

        if (jdkPath == null || regressionTestPath == null || seedNumber == null || mutationRound == null) {
            System.err.println("Error: missing arguments");
            System.out.println("Usage: java -jar JOpFuzzer.jar -jdkPath <jdkPath> -regressionTestPath <regressionTestPath> -seedNumber <seedNumber> -mutationRound <mutationRound>");
            System.exit(1);
        }

        Config config = new Config(jdkPath, regressionTestPath);
        Prepare prepare = new Prepare(config);
        //学习各种代码特性和不同优化选项之间的相关性
        prepare.preprocess();//preprocess the seeds and construct the prior knowledge from the regression test
        SeedPool seedPool = new SeedPool(seedNumber, jdkPath); //generate the seed pool
        MutationEntry mutationEntry = new MutationEntry(jdkPath, seedPool, mutationRound);
        System.out.println("执行完成");
    }
}