// Generated by Java* Fuzzer test generator (1.0.001). Mon Apr 10 13:03:47 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1023602720L;
    public static double dFld=35.23779;
    public static byte byFld=-55;
    public boolean bFld=false;
    public volatile int iFld=63264;
    public static int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -7);
        FuzzerUtils.init(Test.lArrFld, 4L);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=178, i7=-14, i8=-3, i9=-60062, i10=-55309, i11=-4;
        float f1=114.481F;
        boolean b1=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -5679742841118593531L);

        for (i6 = 6; i6 < 371; i6++) {
            i7 = -2649;
            f1 += (i6 + i6);
            for (i8 = 1; i8 < 5; ++i8) {
                Test.dFld = Test.byFld;
                Test.instanceCount += i8;
                lArr[i8] = Test.instanceCount;
                Test.instanceCount >>>= i6;
                for (i10 = 1; 2 > i10; i10++) {
                    i11 -= (int)Test.dFld;
                    Test.instanceCount *= i10;
                    b1 = b1;
                    i9 = i8;
                    i9 *= (int)Test.instanceCount;
                    Test.byFld = (byte)44L;
                }
            }
        }
        vMeth1_check_sum += i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + i11 + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i4, int i5, boolean b) {

        int i12=-12, i13=-1, i14=-57770, i15=-13606, i16=9;
        float f2=0.602F;

        vMeth1();
        for (i12 = 16; i12 < 365; i12++) {
            Test.instanceCount = -56;
            i4 += (((i12 * i13) + i12) - i12);
            Test.iArrFld[i12 - 1] <<= -28877;
            i14 = 1;
            do {
                Test.iArrFld[i12 - 1] = -211;
                i5 ^= Test.byFld;
                for (i15 = 1; i15 < 1; ++i15) {
                    i16 <<= (int)Test.instanceCount;
                    Test.instanceCount += (i15 * i15);
                    i5 *= i15;
                    i16 += i15;
                    f2 += (0L + (i15 * i15));
                    i16 ^= i15;
                }
            } while (++i14 < 5);
        }
        vMeth_check_sum += i4 + i5 + (b ? 1 : 0) + i12 + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2);
    }

    public static int iMeth(int i, byte by, int i1) {

        float f=103.823F;
        int i2=7, i3=12, i17=159, i18=108, i19=50005, i20=-2;
        boolean b2=true;
        short s=28712, sArr[]=new short[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -64424L);
        FuzzerUtils.init(sArr, (short)-7550);

        i <<= (int)((long)(-Math.sqrt(Test.dFld)) ^ Math.abs((int)(i1 - f)));
        for (i2 = 5; i2 < 127; ++i2) {
            vMeth(5, i1, b2);
            i1 -= i2;
            for (i17 = 1; 13 > i17; ++i17) {
                for (i19 = 1; i19 < 2; ++i19) {
                    i18 -= i2;
                    Test.iArrFld[i17 + 1] = (int)1.313F;
                    i18 += (int)(-121L + (i19 * i19));
                    lArr1[i17 + 1] = i20;
                    i3 = i18;
                    i3 = s;
                    Test.byFld -= (byte)f;
                    sArr[i17 - 1] = (short)11;
                    i += (i19 ^ Test.instanceCount);
                }
            }
        }
        long meth_res = i + by + i1 + Float.floatToIntBits(f) + i2 + i3 + (b2 ? 1 : 0) + i17 + i18 + i19 + i20 + s +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i21=-22735, i22=-6486, i23=10, i24=-25492, i25=-8, i26=64451, i27=-7, i28=-9, i29=-9;
        float f3=84.294F;
        double d=-2.40720;

        Test.instanceCount *= (iMeth(i21, Test.byFld, i21) ^ i21);
        i21 <<= i21;
        i21 = (int)f3;
        i21 = (int)Test.instanceCount;
        i21 = (int)Test.instanceCount;
        for (i22 = 3; i22 < 326; i22++) {
            Test.instanceCount *= i23;
            f3 = 23342L;
            for (i24 = 2; 78 > i24; i24++) {
                dArrFld[i22 - 1] -= i24;
                i25 = i21;
                if (bFld) break;
                for (i26 = 1; 2 > i26; i26++) {
                    f3 = i28;
                }
                for (d = 2; d > i22; d -= 3) {
                    i29 >>= 244;
                    i28 += (int)(((d * i23) + i28) - f3);
                    switch ((i24 % 6) + 95) {
                    case 95:
                        i21 += (57826 + (d * d));
                        if (bFld) {
                            Test.instanceCount = iFld;
                            f3 = i22;
                        } else {
                            Test.lArrFld[i22 + 1] += Test.instanceCount;
                        }
                        f3 += (0.952F + (d * d));
                    case 96:
                    case 97:
                        i21 >>= iFld;
                        Test.dFld = 42115383L;
                        i27 -= (int)Test.instanceCount;
                        f3 = (float)-1.108118;
                        break;
                    case 98:
                        Test.lArrFld = Test.lArrFld;
                        f3 += -252;
                        break;
                    case 99:
                        i29 = i23;
                    case 100:
                        f3 *= i24;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i21 f3 i22 = " + i21 + "," + Float.floatToIntBits(f3) + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 i28 = " + i26 + "," + i27 + "," + i28);
        FuzzerUtils.out.println("d i29 = " + Double.doubleToLongBits(d) + "," + i29);

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("bFld iFld Test.iArrFld = " + (bFld ? 1 : 0) + "," + iFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("dArrFld Test.lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) +
            "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
