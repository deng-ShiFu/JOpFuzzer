// Generated by Java* Fuzzer test generator (1.0.001). Mon Apr 10 13:03:48 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2095740695L;
    public float fFld=0.197F;
    public int iFld=-60;
    public static int iFld1=-120;
    public static byte byFld=4;
    public int iFld2=62853;
    public static double dFld=-110.22938;
    public static volatile int iArrFld[]=new int[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -15092);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static long lMeth(int i2) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -51);

        iArr[(Test.iFld1 >>> 1) % N] *= (int)-7777930790615157718L;
        long meth_res = i2 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth1() {

        double d1=0.1723;
        int i3=15080, i4=235, i5=141;
        short s=5295;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, 2.252F);

        for (float f : fArr1) {
            Test.iArrFld[(Test.iFld1 >>> 1) % N] += Test.iFld1;
            for (d1 = 1; d1 < 4; ++d1) {
                boolean b=false;
                Test.instanceCount = Test.iFld1;
                i3 >>>= Test.byFld;
                if (b) break;
                switch ((((16896 >>> 1) % 8) * 5) + 118) {
                case 136:
                    for (i4 = 1; i4 < 2; i4++) {
                        Test.instanceCount += (((i4 * Test.instanceCount) + i3) - Test.iFld1);
                        Test.byFld <<= (byte)Test.iFld1;
                        if (b) break;
                        f = 3018372588L;
                        i5 = (int)Test.instanceCount;
                    }
                    i3 += (int)(((d1 * Test.iFld1) + Test.instanceCount) - i5);
                    break;
                case 129:
                    i5 += (int)(((d1 * i3) + Test.iFld1) - Test.iFld1);
                    break;
                case 146:
                    s += (short)(d1 - Test.instanceCount);
                case 147:
                    Test.iFld1 /= (int)(s | 1);
                    break;
                case 130:
                case 140:
                    i3 = i3;
                    break;
                case 124:
                    i5 = Test.iFld1;
                    break;
                case 149:
                    Test.iFld1 += (int)((long)d1 ^ i4);
                    break;
                default:
                    Test.instanceCount = i3;
                }
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i3 + i4 + i5 + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(long l) {

        double d=-18.21734;
        int i6=45794, i7=-28162, i8=-246, i9=123, i10=-190, i11=-133;
        boolean b2=false;
        float f1=1.216F, fArr[]=new float[N];
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(fArr, 0.316F);
        FuzzerUtils.init(lArr, 40507L);

        Test.iFld1 = (int)(d - ((fArr[(Test.iFld1 >>> 1) % N]--) + (Test.iFld1 * Test.iFld1)));
        vMeth1();
        for (i6 = 6; 171 > i6; ++i6) {
            for (i8 = 1; i8 < 10; i8++) {
                boolean b1=true;
                b1 = b1;
                Test.iFld1 = Test.iFld1;
                i9 += (int)l;
            }
            if (b2) continue;
            Test.iFld1 &= 167;
            for (i10 = 1; i10 < 10; i10++) {
                f1 = i11;
                lArr[i10 + 1][i6 + 1] = Test.instanceCount;
                Test.iFld1 = i6;
                Test.instanceCount += (((i10 * l) + l) - f1);
                i11 += (((i10 * i7) + Test.instanceCount) - i8);
            }
        }
        vMeth_check_sum += l + Double.doubleToLongBits(d) + i6 + i7 + i8 + i9 + (b2 ? 1 : 0) + i10 + i11 +
            Float.floatToIntBits(f1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr);
    }

    public int iMeth() {

        int i12=-1, i13=127, i14=-47444, i15=-3, i16=-4;
        double d2=49.30785, dArr[]=new double[N];
        short s1=22552, sArr[]=new short[N];

        FuzzerUtils.init(dArr, -32.9653);
        FuzzerUtils.init(sArr, (short)-1829);

        vMeth(Test.instanceCount);
        for (i12 = 5; i12 < 146; ++i12) {
            for (i14 = 1; i14 < 11; ++i14) {
                Test.instanceCount = -53648L;
                for (d2 = 1; d2 < 2; d2++) {
                    Test.instanceCount = (long)fFld;
                    dArr[i14] -= i16;
                    Test.instanceCount <<= i16;
                    switch ((((31915 >>> 1) % 10) * 5) + 62) {
                    case 107:
                        Test.iArrFld[i14] = iFld2;
                        Test.dFld = s1;
                        Test.instanceCount = Test.instanceCount;
                        iFld >>= iFld;
                        break;
                    case 70:
                        iFld2 = (int)Test.instanceCount;
                        iFld += (int)Test.dFld;
                    case 93:
                        Test.instanceCount = Test.byFld;
                        break;
                    case 84:
                        Test.instanceCount += (long)d2;
                        break;
                    case 96:
                    case 80:
                        lArrFld[(int)(d2)] *= s1;
                        break;
                    case 106:
                        Test.iArrFld[(int)(d2 - 1)] -= (int)Test.dFld;
                        break;
                    case 68:
                        sArr = sArr;
                        break;
                    case 92:
                        Test.byFld += (byte)Test.instanceCount;
                        break;
                    case 64:
                        Test.iArrFld = Test.iArrFld;
                        break;
                    default:
                        i16 += (int)(d2 - i13);
                    }
                }
            }
        }
        long meth_res = i12 + i13 + i14 + i15 + Double.doubleToLongBits(d2) + i16 + s1 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=1, i1=226, i17=5, i18=58, i19=-3, i20=-9, i21=-2, i22=123;
        short s2=-813, sArr1[]=new short[N];
        boolean b3=false;

        FuzzerUtils.init(sArr1, (short)-7119);

        for (i = 312; i > 1; --i) {
            fFld += (((i * iFld) + Test.iFld1) - Test.iFld1);
            lMeth(iMeth());
            for (i17 = 4; i17 < 81; i17++) {
                Test.dFld += i18;
                Test.dFld = Test.instanceCount;
                s2 >>>= (short)iFld2;
                iFld = i;
                Test.instanceCount += (-11286L + (i17 * i17));
                Test.instanceCount = i17;
                i1 = iFld;
                if (b3) break;
                i1 += s2;
            }
            for (i19 = 1; i19 < 81; i19++) {
                for (i21 = 1; i21 < 2; i21++) {
                    switch (((Test.iFld1 >>> 1) % 1) + 36) {
                    case 36:
                        iFld2 += (int)(1L + (i21 * i21));
                        iFld += (i21 ^ iFld);
                        break;
                    default:
                        Test.iArrFld[i] *= (int)Test.instanceCount;
                    }
                    iFld2 += i21;
                    Test.byFld = (byte)iFld2;
                    Test.instanceCount = -13;
                    Test.iArrFld[i19 - 1] = iFld;
                    i18 = i21;
                    switch (((i % 1) * 5) + 107) {
                    case 112:
                        i20 = (int)Test.instanceCount;
                        break;
                    }
                    iFld += 27026;
                    lArrFld[i19] *= -2369230442L;
                    Test.instanceCount += (i21 + fFld);
                }
                sArr1[i] = (short)Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i1 i17 = " + i + "," + i1 + "," + i17);
        FuzzerUtils.out.println("i18 s2 b3 = " + i18 + "," + s2 + "," + (b3 ? 1 : 0));
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 sArr1 = " + i22 + "," + FuzzerUtils.checkSum(sArr1));

        FuzzerUtils.out.println("Test.instanceCount fFld iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(fFld) + "," + iFld);
        FuzzerUtils.out.println("Test.iFld1 Test.byFld iFld2 = " + Test.iFld1 + "," + Test.byFld + "," + iFld2);
        FuzzerUtils.out.println("Test.dFld Test.iArrFld lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
