// Generated by Java* Fuzzer test generator (1.0.001). Mon Apr 10 13:04:26 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=40164L;
    public static byte byFld=104;
    public static int iFld=-41668;
    public int iFld1=-172;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 97);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i2, int i3, int i4) {

        float f1=0.989F, f2=111.564F;
        int i5=6, i6=-8441;
        boolean b=false;
        byte by=-27;

        for (f1 = 6; f1 < 133; ++f1) {
            Test.iArrFld[(int)(f1)] <<= i2;
            Test.instanceCount -= Test.instanceCount;
            i6 = 1;
            do {
                if (false) break;
                i3 -= i3;
                i2 += (((i6 * i3) + i5) - Test.instanceCount);
                i4 = i4;
                Test.iArrFld[i6 - 1] = (int)Test.instanceCount;
            } while (++i6 < 12);
            if (b) continue;
            Test.iArrFld[(int)(f1 - 1)] -= 25;
            try {
                i5 = (Test.iArrFld[(int)(f1)] / i6);
                Test.iArrFld[(int)(f1 - 1)] = (i6 / 119);
                i4 = (-20 % i4);
            } catch (ArithmeticException a_e) {}
            if (false) {
                f2 += f1;
                Test.instanceCount -= by;
            } else if (b) {
                i2 -= (int)Test.instanceCount;
            } else {
                f2 -= i2;
            }
        }
        vMeth2_check_sum += i2 + i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + (b ? 1 : 0) + Float.floatToIntBits(f2)
            + by;
    }

    public static void vMeth1(float f, int i1, long l) {

        double d1=2.42155, d2=69.92032;
        int i7=44806, i8=-11, i9=-8, i10=-14, i11=-13;
        short s=-451;

        vMeth2(i1, i1, i1);
        for (d1 = 2; 166 > d1; d1++) {
            i1 += (int)l;
            i1 = i7;
            f = i7;
            Test.instanceCount = Test.instanceCount;
            for (i8 = 1; i8 < 10; i8++) {
                for (i10 = 1; i10 < 2; i10++) {
                    d2 += s;
                    i9 <<= i10;
                    f -= -37L;
                    i7 += i10;
                    f = i10;
                    l += i10;
                    i1 -= 11;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i1 + l + Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + i11 +
            Double.doubleToLongBits(d2) + s;
    }

    public static void vMeth(double d, int i) {

        int i12=-2, i13=7, i14=21169, i15=-2, i16=-9, i17=8;
        boolean b1=true;
        float f3=0.102F;

        vMeth1(0.673F, -53965, 1859517320L);
        i12 = 1;
        do {
            if (b1) continue;
        } while (++i12 < 213);
        Test.iArrFld[(i12 >>> 1) % N] -= 2318;
        if (b1) {
            i *= Test.byFld;
            for (i13 = 7; i13 < 152; i13++) {
                i15 = 1;
                do {
                    for (i16 = 1; i16 < 1; i16++) {
                        f3 += i16;
                    }
                    i = (int)Test.instanceCount;
                    f3 += i16;
                    if (false) break;
                    i17 += (i15 * i15);
                    i17 -= 22215;
                } while (++i15 < 11);
            }
            vMeth_check_sum += Double.doubleToLongBits(d) + i + i12 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 + i17 +
                Float.floatToIntBits(f3);
            return;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + i12 + (b1 ? 1 : 0) + i13 + i14 + i15 + i16 + i17 +
            Float.floatToIntBits(f3);
    }

    public void mainTest(String[] strArr1) {

        double d3=-70.27316;
        int i18=5, i19=-3, i20=58608, i21=10, i22=-36, i23=59323, i24=9, i25=12, i26=9, i27=-123, i28=28838;
        float f4=76.765F, fArr[]=new float[N];
        short s1=-5919;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)114);
        FuzzerUtils.init(fArr, 0.628F);

        vMeth(d3, Test.iFld);
        Test.iFld >>= (int)Test.instanceCount;
        for (i18 = 293; i18 > 12; i18--) {
            i20 = 1;
            while (++i20 < 89) {
                Test.iFld += iFld1;
                Test.iArrFld[i20] *= (int)f4;
                Test.instanceCount -= i18;
                Test.instanceCount >>>= iFld1;
                Test.iFld <<= (int)34L;
                Test.instanceCount |= s1;
            }
        }
        Test.iFld = (int)d3;
        iFld1 += i20;
        iFld1 -= -21285;
        for (i21 = 5; i21 < 209; i21++) {
            for (i23 = 2; i23 < 123; ++i23) {
                byArr[i21 + 1] = (byte)i22;
                Test.instanceCount *= i24;
                Test.instanceCount = Test.instanceCount;
            }
            Test.instanceCount += (i21 | i20);
            i22 = (int)Test.instanceCount;
            Test.instanceCount += Test.instanceCount;
            d3 *= iFld1;
            i24 = (int)d3;
            for (i25 = 7; i25 < 123; ++i25) {
                for (i27 = 1; 2 > i27; i27++) {
                    i24 += (i27 + i23);
                    i19 ^= 74;
                    fArr[i25] -= i24;
                    Test.iArrFld[i21] %= 17634;
                    f4 += ((long)i27 ^ (long)i21);
                }
            }
        }

        FuzzerUtils.out.println("d3 i18 i19 = " + Double.doubleToLongBits(d3) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 f4 s1 = " + i20 + "," + Float.floatToIntBits(f4) + "," + s1);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 byArr = " + i27 + "," + i28 + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("fArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Test.iFld);
        FuzzerUtils.out.println("iFld1 Test.iArrFld = " + iFld1 + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
